## CS 460: Problem Set 1, SQL Programming Problems# Editor: Chandini S. Toleti U29391556### For each problem, use a text editor to add the appropriate SQL# command between the triple quotes provided for that problem's variable.## For example, here is how you would include a query that finds the# names and years of all movies in the database with an R rating:#sample = """    SELECT name, year    FROM Movie    WHERE rating = 'R';"""## Problem 4. Put your SQL command between the triple quotes found below.#problem4 = """SELECT name, dobFROM PersonWHERE name LIKE '%Joy%'; """## Problem 5. Put your SQL command between the triple quotes found below.#problem5 = """SELECT name, runtimeFROM MovieWHERE name = 'The Holdovers'OR name = 'Spotlight';"""## Problem 6. Put your SQL command between the triple quotes found below.#problem6 = """SELECT M.nameFROM Person P, Actor A, Movie MWHERE P.id = A.actor_id	AND A.movie_id = M.id	AND P.name = 'Robert Downey Jr.';"""## Problem 7. Put your SQL command between the triple quotes found below.#problem7 = """SELECT DISTINCT COUNT(DISTINCT P.id)FROM Person P, Oscar MWHERE P.id = M.person_id	AND P.pob LIKE '%Massachusetts, USA'; """## Problem 8. Put your SQL command between the triple quotes found below.#problem8 = """SELECT rating,  COUNT(rating), MIN(earnings_rank)FROM Movie MWHERE earnings_rank<=200 GROUP BY rating;            """## Problem 9. Put your SQL command between the triple quotes found below.#problem9 = """SELECT name, yearFROM MovieWHERE  genre LIKE '%N%' AND year IN (	SELECT MIN(year)					FROM Movie 					WHERE genre LIKE '%N%');           """## Problem 10. Put your SQL command between the triple quotes found below.#problem10 = """SELECT P.name, COUNT(*)FROM Person P, Oscar OWHERE P.id = O.person_id GROUP BY O.person_idHAVING  COUNT(*)>=3ORDER BY COUNT(*) DESC, name;            """## Problem 11. Put your SQL command between the triple quotes found below.#problem11 = """SELECT M.name, COUNT(O.movie_id)FROM Movie M LEFT OUTER JOIN Oscar O ON M.id = O.movie_idWHERE M.year= '2023'GROUP BY M.name;            """## Problem 12. Put your SQL command between the triple quotes found below.##problem12 = """SELECT COUNT(DISTINCT actor_id)FROM Actor AWHERE A.actor_id  NOT IN (	SELECT A.actor_id				FROM Actor A, Movie M				WHERE A.movie_id = M.id AND year >=2014); """## Problem 13. Put your SQL command between the triple quotes found below.#problem13 = """SELECT O.type, AVG(M.runtime)FROM Oscar O, Movie MWHERE O.movie_id = M.idGROUP BY O.type            """## Problem 14. Put your SQL command between the triple quotes found below.#problem14 = """SELECT name, dobFROM PersonWHERE  dob = (SELECT MIN(dob)	      FROM Person)    OR dob = (SELECT MAX(dob)	      FROM Person);            """## Problem 15. Put your SQL command between the triple quotes found below.#problem15 = """UPDATE PersonSET dob = '1995-12-27', pob = 'New York, New York, USA'WHERE name = 'Timothee Chalamet';            """