## CS 460: Problem Set 2: XQuery Programming Problems### For each query, use a text editor to add the appropriate XQuery# command between the triple quotes provided for that query's variable.## For example, here is how you would include a query that finds# the names of all movies in the database from 1990.#sample = """    for $m in //movie    where $m/year = 1990    return $m/name"""## 1. Put your query for this problem between the triple quotes found below.#    Follow the same format as the model query shown above.#query1 = """//movie[name = "The Holdovers" or name= "Spotlight"]/@id """## 2. Put your query for this problem between the triple quotes found below.#query2 = """for $movie in //movie[contains(@actors, //person[name = "Robert Downey Jr."]/@id)]return  <downey_movie>    {$movie/name,$movie/year,$movie/runtime}    </downey_movie> """## 3. Put your query for this problem between the triple quotes found below.#query3 = """for $r in distinct-values(//movie[earnings_rank]/rating)order by $rreturn <profitable_rating>        {<rating>        	{$r}        </rating>,        <num_top_grossers>        	{count(		for $m in //movie[earnings_rank]              	where /$r= $m/rating              	return $m          	)}         </num_top_grossers>,         <best_rank>                 	{min(              	for $m in //movie[earnings_rank]              	where /$r= $m/rating              	return $m/earnings_rank          	)}         </best_rank>                            }       </profitable_rating>"""## 4. Put your query for this problem between the triple quotes found below.#query4 = """for $ms in //person[contains(pob,"Massachusetts, USA")][@oscars]order by $ms/namereturn<mass_oscar_winner>       {$ms/name,        $ms/pob,                        for $o in //oscar[contains($ms/@oscars, @id)]         order by $o/year        return <oscar>                {                string($o/type),"-",string($o/year)                }                 </oscar>                     }</mass_oscar_winner>"""## 5. Put your query for this problem between the triple quotes found below.#query5 = """for $actor in //personlet $movies:= //movie[contains(@actors,$actor/@id)]where count($movies)>=10order by $actor/namereturn <prolific_actor>        {$actor/name,         <first_appeared>{min($movies/year)}</first_appeared>,          <last_appeared>{max($movies/year)}</last_appeared>,             for $movies in $movies             let $am:= $movies[contains(@actors,$actor/@id)]             order by$am/year             return <movie>{string($am/name),"-",string($am/year)}</movie>}        </prolific_actor>"""